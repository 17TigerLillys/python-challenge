Homework 4: Academy of Py
* It's hard for me to find trends in the data because I completely misunderstood how I was supposed to group the data, but here are my observations anyway!!!!
*kids are more likely to pass their math exams than their reading exams (from the District Summary)
*the overall pass rate is much higher at charter schools than district schools (from the top and bottom performing schools)
*the overall pass rate is much lower at the largest schools (I can tell just by looking at the rows in grouped by type)

import pandas as pd

import numpy as np

csv_path_1 = "./students_complete.csv"

student_data_df = pd.read_csv(csv_path_1)

csv_path = "./schools_complete.csv"

survey_data_df = pd.read_csv(csv_path)

​

District Summary

district_summary={"totalSchools":"","totalStudents":"",

                  "totalBudget":"","avgMath":"","avgRead":"",

                  "mathPer":"","readPer":"","overallPer":""}

​

#finds the total number of schools

total_s=survey_data_df.shape

total_schools=total_s[0]

district_summary["totalSchools"]=total_schools

#finds the total number of students

total_st=student_data_df.shape

total_students=total_st[0]

district_summary["totalStudents"]=total_students

#finds the total budget

total_budget=survey_data_df["budget"].sum()

district_summary["totalBudget"]=total_budget

#finds the average reading and math scores

average_reading=student_data_df["reading_score"].mean()

average_math=student_data_df["math_score"].mean()

district_summary["avgMath"]=average_math

district_summary["avgRead"]=average_reading

#finds the percentage of students who passed reading

read_passers=student_data_df.loc[student_data_df['reading_score'] >= 70]

num_read_p=read_passers.shape

num_read_passers=num_read_p[0]

read_pass_per=float((num_read_passers/total_students)*100)

read_pass_per_neat=("{0:.2f}%".format(read_pass_per))

district_summary["readPer"]=read_pass_per_neat

#finds the percentage of students who passed math

math_passers=student_data_df.loc[student_data_df['math_score'] >= 70]

num_math_p=math_passers.shape

num_math_passers=num_math_p[0]

math_pass_per=float((num_math_passers/total_students)*100)

math_pass_per_neat=("{0:.2f}%".format(math_pass_per))

district_summary["mathPer"]=math_pass_per_neat

#Averages the % of math and reading passers

overall_pass=(math_pass_per+read_pass_per)/2

overall_pass_neat=("{0:.2f}%".format(overall_pass))

district_summary["overallPer"]=overall_pass_neat

district_summary_df=pd.DataFrame(district_summary,index=[1])

district_summary_df=district_summary_df[["totalSchools","totalStudents","totalBudget",

                                         "avgMath","avgRead","mathPer","readPer","overallPer"]]

district_summary_df.columns=['Total Schools', 'Total Students', 

                            'Total Budget', 'Avg Math Score','Avg Reading Score','% Passing Math',

                            '% Passing Reading', 'Overall Passing Rate', 

                            ]

district_summary_df

	Total Schools 	Total Students 	Total Budget 	Avg Math Score 	Avg Reading Score 	% Passing Math 	% Passing Reading 	Overall Passing Rate
1 	11 	29376 	18648468 	82.269846 	82.865877 	86.86% 	78.22% 	82.54%
School Summary

#make a function to get the data I need for each school

def extractStudents(schoolName):

    school_overall_pass_neat=0

    school_read_per=0

    school_average_math=0

    school_avg_math=0

    school_avg_read=0

    school_budget=0

    school_math_passers=0

    school_math_per=0

    school_math_per_neat=0

    school_dic={'name':schoolName, 'type':'','numStudents':'',

                'totalBudget':'','stuBudget':'','mathScore':'',

                'readScore':'', 'mathPer':'','readPer':'',

                'overallPer':''}

    

    #create a Data Frame for the given school

    school_name_df=student_data_df.loc[student_data_df['school_name'] == schoolName]

    overall_school_name_df=survey_data_df.loc[survey_data_df['school_name']==schoolName]

    #finds the school type, size, budget and per student budget

    school_type=overall_school_name_df['type'] 

    if 'Charter' in str(school_type):

        school_type="Charter"

    else:

        school_type="District"

    school_budget=overall_school_name_df['budget']

    school_size=overall_school_name_df['size']

    per_student_budget=int(school_budget)/int(school_size)

    

    school_dic['type']=school_type

    school_dic['numStudents']=int(school_size)

    school_dic['totalBudget']=int(school_budget)

    school_dic['stuBudget']=per_student_budget

​

    #finds the percentage of students who passed math and the average math score

    school_math_passers_df=school_name_df.loc[student_data_df['math_score'] >= 70]

    school_math_passers=school_math_passers_df.shape[0]

    school_math_per=(int(school_math_passers)/int(school_size))*100

    school_math_per_neat=("{0:.2f}%".format(school_math_per))

    school_avg_math=school_name_df["math_score"].mean()

    school_dic['mathScore']=round(school_avg_math,2)  

    school_dic['mathPer']=school_math_per_neat  #Note that this isn't a number!!!!!

    

    #finds the percentage of students who passed reading and the average reading score

    school_read_passers_df=school_name_df.loc[student_data_df['reading_score'] >= 70]

    school_read_passers=school_read_passers_df.shape[0]

    school_read_per=(int(school_read_passers)/int(school_size))*100

    school_read_per_neat=("{0:.2f}%".format(school_read_per)) 

    school_avg_read=school_name_df["reading_score"].mean()

    school_dic['readScore']=round(school_avg_read,2)

    school_dic['readPer']=school_read_per_neat

​

    #Averages the % of math and reading passers

    school_overall_pass=round((school_math_per+school_read_per)/2,2)

    school_overall_pass_neat=("{0:.2f}%".format(school_overall_pass))

​

    school_overall_pass_neat=("{0:.2f}%".format(school_overall_pass))

    school_dic['overallPer']=school_overall_pass

   

    return school_dic

miller_dictionary=extractStudents('Miller High School')

sherman_dictionary=extractStudents('Sherman High School')

galloway_dictionary=extractStudents('Galloway High School')

smith_dictionary=extractStudents('Smith High School')

kelly_dictionary=extractStudents('Kelly High School')

hawkins_dictionary=extractStudents('Hawkins High School')

gonzalez_dictionary=extractStudents('Gonzalez High School')

glass_dictionary=extractStudents('Glass High School')

gomez_dictionary=extractStudents('Gomez High School')

campbell_dictionary=extractStudents('Campbell High School')

macdonald_dictionary=extractStudents('Macdonald High School')

all_schools=[miller_dictionary, sherman_dictionary, 

             galloway_dictionary, smith_dictionary,

            kelly_dictionary, hawkins_dictionary,

            gonzalez_dictionary, glass_dictionary,

            gomez_dictionary, campbell_dictionary,

            macdonald_dictionary]

all_schools_df=pd.DataFrame(all_schools)

all_schools_df_neat=all_schools_df[["name","type","numStudents",

                                    "totalBudget","stuBudget",

                                    "mathScore","readScore","mathPer",

                                    "readPer","overallPer"]]

all_schools_df_neat.columns=['School Name', 'School Type', 

                            '# of Students', 'Total School Budget',

                             'Per Student Budget','Avg Math Score',

                             'Avg Reading Score','% Passing Math',

                            '% Passing Reading', 'Overall Passing Rate (%)', 

                            ]

all_schools_df_neat.head(11)

	School Name 	School Type 	# of Students 	Total School Budget 	Per Student Budget 	Avg Math Score 	Avg Reading Score 	% Passing Math 	% Passing Reading 	Overall Passing Rate (%)
0 	Miller High School 	Charter 	2424 	1418040 	585.0 	83.61 	94.00 	93.56% 	100.00% 	96.78
1 	Sherman High School 	District 	3213 	2152710 	670.0 	81.50 	77.29 	82.94% 	67.29% 	75.12
2 	Galloway High School 	Charter 	2471 	1445535 	585.0 	83.57 	94.03 	94.21% 	100.00% 	97.11
3 	Smith High School 	District 	4954 	3210192 	648.0 	81.54 	77.15 	83.17% 	66.37% 	74.77
4 	Kelly High School 	District 	3307 	2225611 	673.0 	81.68 	76.83 	83.40% 	66.56% 	74.98
5 	Hawkins High School 	District 	4555 	2851430 	626.0 	81.72 	77.01 	83.91% 	66.92% 	75.41
6 	Gonzalez High School 	Charter 	1855 	1192765 	643.0 	83.44 	94.14 	93.21% 	100.00% 	96.60
7 	Glass High School 	District 	3271 	2155589 	659.0 	81.29 	76.89 	82.33% 	67.35% 	74.84
8 	Gomez High School 	Charter 	2154 	1288092 	598.0 	83.84 	94.03 	93.96% 	100.00% 	96.98
9 	Campbell High School 	Charter 	271 	157993 	583.0 	83.59 	93.77 	95.20% 	100.00% 	97.60
10 	Macdonald High School 	Charter 	901 	550511 	611.0 	83.78 	93.93 	94.34% 	100.00% 	97.17
Top 5 Schools by Passing Rate

#finds the top five performing schools by overall passing rate

top_5_df=all_schools_df_neat.nlargest(5,"Overall Passing Rate (%)")

top_5_df

	School Name 	School Type 	# of Students 	Total School Budget 	Per Student Budget 	Avg Math Score 	Avg Reading Score 	% Passing Math 	% Passing Reading 	Overall Passing Rate (%)
9 	Campbell High School 	Charter 	271 	157993 	583.0 	83.59 	93.77 	95.20% 	100.00% 	97.60
10 	Macdonald High School 	Charter 	901 	550511 	611.0 	83.78 	93.93 	94.34% 	100.00% 	97.17
2 	Galloway High School 	Charter 	2471 	1445535 	585.0 	83.57 	94.03 	94.21% 	100.00% 	97.11
8 	Gomez High School 	Charter 	2154 	1288092 	598.0 	83.84 	94.03 	93.96% 	100.00% 	96.98
0 	Miller High School 	Charter 	2424 	1418040 	585.0 	83.61 	94.00 	93.56% 	100.00% 	96.78
Bottom 5 Schools by Passing Rate

#finds the bottom five performing schools by overall passing rate

bottom_5_df=all_schools_df_neat.nsmallest(5,"Overall Passing Rate (%)")

bottom_5_df.head()

	School Name 	School Type 	# of Students 	Total School Budget 	Per Student Budget 	Avg Math Score 	Avg Reading Score 	% Passing Math 	% Passing Reading 	Overall Passing Rate (%)
3 	Smith High School 	District 	4954 	3210192 	648.0 	81.54 	77.15 	83.17% 	66.37% 	74.77
7 	Glass High School 	District 	3271 	2155589 	659.0 	81.29 	76.89 	82.33% 	67.35% 	74.84
4 	Kelly High School 	District 	3307 	2225611 	673.0 	81.68 	76.83 	83.40% 	66.56% 	74.98
1 	Sherman High School 	District 	3213 	2152710 	670.0 	81.50 	77.29 	82.94% 	67.29% 	75.12
5 	Hawkins High School 	District 	4555 	2851430 	626.0 	81.72 	77.01 	83.91% 	66.92% 	75.41
Math Scores By Grade

merge_table = pd.merge(student_data_df, survey_data_df, on="school_name")

grouped_df_new=merge_table['math_score'].groupby([merge_table['school_name'],merge_table['grade']])

mean_grouped_new=grouped_df_new.mean()

mean_grouped_new

school_name            grade
Campbell High School   10th     84.269663
                       11th     83.940000
                       12th     82.064516
                       9th      83.842857
Galloway High School   10th     83.551630
                       11th     83.975425
                       12th     83.204724
                       9th      83.534384
Glass High School      10th     81.044652
                       11th     81.390935
                       12th     80.823120
                       9th      81.867647
Gomez High School      10th     83.966817
                       11th     83.874468
                       12th     83.828916
                       9th      83.676568
Gonzalez High School   10th     83.952118
                       11th     83.201970
                       12th     82.840206
                       9th      83.548263
Hawkins High School    10th     81.475371
                       11th     81.885770
                       12th     81.938296
                       9th      81.667758
Kelly High School      10th     81.881168
                       11th     81.497283
                       12th     81.453920
                       9th      81.789659
Macdonald High School  10th     83.813953
                       11th     83.482906
                       12th     83.516484
                       9th      84.255507
Miller High School     10th     83.624661
                       11th     83.635838
                       12th     83.304183
                       9th      83.823713
Sherman High School    10th     81.526882
                       11th     81.232117
                       12th     81.735955
                       9th      81.496614
Smith High School      10th     80.997980
                       11th     81.832724
                       12th     81.548182
                       9th      81.909804
Name: math_score, dtype: float64

Reading Scores By Grade

merge_table['reading_score'].groupby([merge_table['school_name'],merge_table['grade']]).mean()

school_name            grade
Campbell High School   10th     93.876404
                       11th     94.080000
                       12th     93.709677
                       9th      93.471429
Galloway High School   10th     93.961957
                       11th     93.979206
                       12th     94.129921
                       9th      94.065903
Glass High School      10th     77.319834
                       11th     77.128895
                       12th     76.618384
                       9th      76.444570
Gomez High School      10th     93.972851
                       11th     93.808511
                       12th     94.130120
                       9th      94.186469
Gonzalez High School   10th     94.103131
                       11th     94.416256
                       12th     94.036082
                       9th      94.042471
Hawkins High School    10th     77.174355
                       11th     77.526621
                       12th     76.852106
                       9th      76.518003
Kelly High School      10th     77.267875
                       11th     76.637228
                       12th     76.966988
                       9th      76.367803
Macdonald High School  10th     94.135659
                       11th     93.799145
                       12th     93.670330
                       9th      94.048458
Miller High School     10th     94.039295
                       11th     94.238921
                       12th     93.823194
                       9th      93.897036
Sherman High School    10th     77.111828
                       11th     77.312409
                       12th     77.501404
                       9th      77.292325
Smith High School      10th     76.805387
                       11th     77.338208
                       12th     77.749091
                       9th      76.861176
Name: reading_score, dtype: float64

Scores By Per Student Spending

#grouping schools by per student spending

bins = [0, 585, 615, 645, 700]

​

# Create the names for the four bins

group_names = ['Low', 'Okay', 'Good', 'Great']

​

all_schools_df["Per Student Budget Summary"] = pd.cut(all_schools_df["stuBudget"], bins, labels=group_names)

​

all_schools_df_new = all_schools_df[['name','mathScore','readScore','mathPer','readPer',

                                     'overallPer','Per Student Budget Summary']]

​

all_schools_df_new.columns=['School Name', 'Avg Math Score', 

                            'Avg Reading Score', '% Passing Math',

                            '% Passing Reading', 'Overall Passing Rate', 

                            'Per Student Budget Summary']

all_schools_df_new

	School Name 	Avg Math Score 	Avg Reading Score 	% Passing Math 	% Passing Reading 	Overall Passing Rate 	Per Student Budget Summary
0 	Miller High School 	83.61 	94.00 	93.56% 	100.00% 	96.78 	Low
1 	Sherman High School 	81.50 	77.29 	82.94% 	67.29% 	75.12 	Great
2 	Galloway High School 	83.57 	94.03 	94.21% 	100.00% 	97.11 	Low
3 	Smith High School 	81.54 	77.15 	83.17% 	66.37% 	74.77 	Great
4 	Kelly High School 	81.68 	76.83 	83.40% 	66.56% 	74.98 	Great
5 	Hawkins High School 	81.72 	77.01 	83.91% 	66.92% 	75.41 	Good
6 	Gonzalez High School 	83.44 	94.14 	93.21% 	100.00% 	96.60 	Good
7 	Glass High School 	81.29 	76.89 	82.33% 	67.35% 	74.84 	Great
8 	Gomez High School 	83.84 	94.03 	93.96% 	100.00% 	96.98 	Okay
9 	Campbell High School 	83.59 	93.77 	95.20% 	100.00% 	97.60 	Low
10 	Macdonald High School 	83.78 	93.93 	94.34% 	100.00% 	97.17 	Okay
Grouping Schools By Size

#grouping schools by size

bins = [0, 1500, 3000, 5000]

​

# Create the names for the four bins

size_group_names = ['Small', 'Medium', 'Large']

​

all_schools_df["Size Summary"] = pd.cut(all_schools_df["numStudents"], bins, labels=size_group_names)

#all_schools_df

new_column_names={'name':"School Name", 'mathScore':"Avg Math Score", 

                  'readScore':"Avg Reading Score",'mathPer':"% Passing Math",

                 'readPer':"% Passing Reading", 'overallPer':"Overall Passing Rate"}

all_schools_df_new_size = all_schools_df[['name','mathScore','readScore','mathPer','readPer','overallPer','Size Summary']]

all_schools_df_new_size.rename(columns=new_column_names,inplace=True)

all_schools_df_new_size

C:\Users\Julie\Anaconda4\lib\site-packages\pandas\core\frame.py:2844: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  **kwargs)

	School Name 	Avg Math Score 	Avg Reading Score 	% Passing Math 	% Passing Reading 	Overall Passing Rate 	Size Summary
0 	Miller High School 	83.61 	94.00 	93.56% 	100.00% 	96.78 	Medium
1 	Sherman High School 	81.50 	77.29 	82.94% 	67.29% 	75.12 	Large
2 	Galloway High School 	83.57 	94.03 	94.21% 	100.00% 	97.11 	Medium
3 	Smith High School 	81.54 	77.15 	83.17% 	66.37% 	74.77 	Large
4 	Kelly High School 	81.68 	76.83 	83.40% 	66.56% 	74.98 	Large
5 	Hawkins High School 	81.72 	77.01 	83.91% 	66.92% 	75.41 	Large
6 	Gonzalez High School 	83.44 	94.14 	93.21% 	100.00% 	96.60 	Medium
7 	Glass High School 	81.29 	76.89 	82.33% 	67.35% 	74.84 	Large
8 	Gomez High School 	83.84 	94.03 	93.96% 	100.00% 	96.98 	Medium
9 	Campbell High School 	83.59 	93.77 	95.20% 	100.00% 	97.60 	Small
10 	Macdonald High School 	83.78 	93.93 	94.34% 	100.00% 	97.17 	Small
Grouping Schools by Type

charter_dic={"School Type":"",'mathScore':"","readScore":""}

charter_df=merge_table.loc[merge_table['type'] == "Charter"]

charter_math_avg=charter_df['math_score'].mean()

charter_read_avg=charter_df['reading_score'].mean()

charter_dic["mathScore"]=round(charter_math_avg,2)

charter_dic["readScore"]=round(charter_read_avg,2)

charter_dic["School Type"]="Charter"

​

district_dic={'mathScore':"","readScore":""}

district_df=merge_table.loc[merge_table['type'] == "District"]

district_math_avg=district_df['math_score'].mean()

district_read_avg=district_df['reading_score'].mean()

district_dic["mathScore"]=round(charter_math_avg,2)

district_dic["readScore"]=round(district_read_avg,2)

district_dic["School Type"]="District"

​

by_type_df=pd.DataFrame([charter_dic,district_dic])

#district_math_avg

#charter_math_avg

by_type_df.head()
